sr_base.c:215:	sr->template[0] = '\0';
sr_base.c:216:	strncpy(sr->auth_key_fn,auth_key_file,64);
sr_base.c:218:	strncpy(sr->rtable, rtable, SR_NAMELEN);
sr_base.c:220:	sr->topo_id = 0;
sr_base.c:221:	strncpy(sr->vhost,  "cpu",    SR_NAMELEN);
sr_base.c:222:	strncpy(sr->rtable, rtable, SR_NAMELEN);
sr_base.c:228:	sr->topo_id = topo;
sr_base.c:229:	strncpy(sr->vhost,  host,    SR_NAMELEN);
sr_base.c:230:	strncpy( sr->server, server, SR_NAMELEN );
sr_base.c:236:	{ strncpy(sr->user, user,  SR_NAMELEN); }
sr_base.c:238:	if ( gethostname(sr->lhost,  SR_NAMELEN) == -1 )
sr_base.c:253:		       sr->user, server, port);
sr_base.c:261:		while (! sr->hw_init )
sr_base.c:288:	sr->interface_subsystem = core;
sr_base.c:302:	return sr->interface_subsystem;
sr_base.c:377:		strncpy(sr->user, "something_silly",  SR_NAMELEN);
sr_base.c:380:	{ strncpy(sr->user, pw->pw_name,  SR_NAMELEN); }
sr_base.c:399:	sr->sockfd   = -1;
sr_base.c:400:	sr->user[0]  = 0;
sr_base.c:401:	sr->vhost[0] = 0;
sr_base.c:402:	sr->topo_id  = 0;
sr_base.c:403:	sr->logfile  = 0;
sr_base.c:404:	sr->hw_init  = 0;
sr_base.c:406:	sr->interface_subsystem = 0;
sr_base.c:408:	pthread_mutex_init(&(sr->send_lock), 0);
sr_base.c~:215:    sr->template[0] = '\0';
sr_base.c~:216:    strncpy(sr->auth_key_fn,auth_key_file,64);
sr_base.c~:218:    strncpy(sr->rtable, rtable, SR_NAMELEN);
sr_base.c~:220:    sr->topo_id = 0;
sr_base.c~:221:    strncpy(sr->vhost,  "cpu",    SR_NAMELEN);
sr_base.c~:222:    strncpy(sr->rtable, rtable, SR_NAMELEN);
sr_base.c~:228:    sr->topo_id = topo;
sr_base.c~:229:    strncpy(sr->vhost,  host,    SR_NAMELEN);
sr_base.c~:230:    strncpy( sr->server, server, SR_NAMELEN );
sr_base.c~:236:    { strncpy(sr->user, user,  SR_NAMELEN); }
sr_base.c~:238:    if ( gethostname(sr->lhost,  SR_NAMELEN) == -1 )
sr_base.c~:253:            sr->user, server, port);
sr_base.c~:261:    while (! sr->hw_init )
sr_base.c~:288:    sr->interface_subsystem = core;
sr_base.c~:302:    return sr->interface_subsystem;
sr_base.c~:377:        strncpy(sr->user, "something_silly",  SR_NAMELEN);
sr_base.c~:380:    { strncpy(sr->user, pw->pw_name,  SR_NAMELEN); }
sr_base.c~:399:    sr->sockfd   = -1;
sr_base.c~:400:    sr->user[0]  = 0;
sr_base.c~:401:    sr->vhost[0] = 0;
sr_base.c~:402:    sr->topo_id  = 0;
sr_base.c~:403:    sr->logfile  = 0;
sr_base.c~:404:    sr->hw_init  = 0;
sr_base.c~:406:    sr->interface_subsystem = 0;
sr_base.c~:408:    pthread_mutex_init(&(sr->send_lock), 0);
sr_dumper.c:26:    if(!sr->logfile)
sr_dumper.c:35:    sr_dump(sr->logfile, &h, buf);
sr_dumper.c:36:    fflush(sr->logfile);
sr_vns.c:44:    sr->logfile = sr_dump_open(logfile, 0, SR_PACKET_DUMP_SIZE);
sr_vns.c:45:    if(!sr->logfile)
sr_vns.c:62:    close(sr->sockfd);
sr_vns.c:64:    if(sr->logfile)
sr_vns.c:65:    { sr_dump_close(sr->logfile); }
sr_vns.c:67:    sr->hw_init = 0;
sr_vns.c:83:    if ( getpeername(sr->sockfd, &dummyaddr, (socklen_t*)&slen) != -1)
sr_vns.c:122:    memset(&(sr->sr_addr),0,sizeof(struct sockaddr_in));
sr_vns.c:124:    sr->sr_addr.sin_family = AF_INET;
sr_vns.c:125:    sr->sr_addr.sin_port = htons(port);
sr_vns.c:135:    memcpy(&(sr->sr_addr.sin_addr),hp->h_addr,hp->h_length);
sr_vns.c:138:    if ((sr->sockfd = socket(AF_INET, SOCK_STREAM, 0)) < 0)
sr_vns.c:145:    if (connect(sr->sockfd, (struct sockaddr *)&(sr->sr_addr),
sr_vns.c:146:                sizeof(sr->sr_addr)) < 0)
sr_vns.c:149:        close(sr->sockfd);
sr_vns.c:160:    if(strlen(sr->template) > 0) {
sr_vns.c:164:        strncpy(ot.templateName, sr->template, 30);
sr_vns.c:165:        strncpy(ot.mVirtualHostID, sr->vhost, IDSIZE);
sr_vns.c:175:        command.topoID = htons(sr->topo_id);
sr_vns.c:176:        strncpy( command.mVirtualHostID, sr->vhost,  IDSIZE);
sr_vns.c:177:        strncpy( command.mUID, sr->user, IDSIZE);
sr_vns.c:183:    if(send(sr->sockfd, buf, buf_len, 0) != buf_len)
sr_vns.c:189:    if(strlen(sr->template) > 0)
sr_vns.c:270:    sr->hw_init = 1;
sr_vns.c:289:    fp = fopen(sr->auth_key_fn, "r");
sr_vns.c:307:        len_username = strlen(sr->user);
sr_vns.c:318:        strcpy(ar->username, sr->user);
sr_vns.c:323:        if(send(sr->sockfd, buf, len, 0) != len) {
sr_vns.c:340:        printf("successfully authenticated as %s\n", sr->user);
sr_vns.c:342:        fprintf(stderr, "Authentication failed as %s: %s\n", sr->user, status->msg);
sr_vns.c:381:            if((ret = recv(sr->sockfd,((uint8_t*)&len) + bytes_read,
sr_vns.c:400:        close(sr->sockfd);
sr_vns.c:421:            if ((ret = read(sr->sockfd, buf+4+bytes_read, len - 4 - bytes_read)) ==
sr_vns.c:427:                close(sr->sockfd);
sr_vns.c:565:    if ( pthread_mutex_lock(&(sr->send_lock)) )
sr_vns.c:567:    if( write(sr->sockfd, sr_pkt, total_len) < (signed int)total_len )
sr_vns.c:571:        if ( pthread_mutex_unlock(&(sr->send_lock)) )
sr_vns.c:575:    if ( pthread_mutex_unlock(&(sr->send_lock)) )
